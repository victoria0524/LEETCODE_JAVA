/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ArrayList<ArrayList<Integer>> pathSum(TreeNode root, int sum) {
        ArrayList<ArrayList<Integer>> result= new ArrayList<ArrayList<Integer>> ();
        if(root==null)
        return result;
        ArrayList<Integer> current = new ArrayList<Integer> ();
        path(root,sum,result,current);
        return result;
    }
    
    private void path(TreeNode root, int sum, ArrayList<ArrayList<Integer>> result, ArrayList<Integer> current)
    {
        
    
        if(root==null)
        return;
        
       if(root.val==sum && root.right==null && root.left==null)
        {
            current.add(root.val);
            ArrayList<Integer> temp = new ArrayList<Integer> (current);
            result.add(temp);
            current.remove(current.size()-1);
        }
            current.add(root.val);
            path(root.left, sum-root.val, result, current);
            path(root.right, sum-root.val,result, current);
            current.remove(current.size()-1);
 
    }
    
}
