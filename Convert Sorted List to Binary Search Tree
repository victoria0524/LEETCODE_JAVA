/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode sortedListToBST(ListNode head) 
    {
        if(head==null)
        return null;
        
        ArrayList<Integer> a=new ArrayList<Integer>();
        
        while (head!=null)
        {
            a.add(head.val);
            head=head.next;
        }
        int [] num= new int[a.size()];
        for (int i=0; i < num.length; i++)
        {
        num[i] = a.get(i).intValue();
        }
        
        return helper(num,0,num.length-1);
        
    }
    
    public TreeNode helper(int [] num, int start, int end)
    {
        if(start>end)
        return null;
        
        int mid=(start+end)/2;
        TreeNode root=new TreeNode(num[mid]);
        root.left=helper(num,start,mid-1);
        root.right=helper(num,mid+1,end);
        
        return root;
    }
}
