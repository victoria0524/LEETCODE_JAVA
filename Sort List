/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
 public class Solution {
    public ListNode sortList(ListNode head) 
    {
        if(head==null||head.next==null)
        return head;
        
        ListNode fast=head,slow=head;
        
        while(fast.next!=null && fast.next.next!=null)
        {
            fast=fast.next.next;
            slow=slow.next;
        }
        
        ListNode right=slow.next;
        slow.next=null;
        ListNode left=head;
        
        left=sortList(left);
        right=sortList(right);
        
        return merge(left,right);        
    }
    
    private ListNode merge(ListNode left, ListNode right)
    {
        ListNode newhead=new ListNode(0);
        ListNode temp=newhead;
        
        while(left!=null && right!=null)
        {
            if(left.val>right.val)
            {
                temp.next=right;
                right=right.next;
            }
            else
            {
                temp.next=left;
                left=left.next;
            }
            temp=temp.next;
        }
        
        if(left!=null)
        temp.next=left;
        
        if(right!=null)
        temp.next=right;
        
        return newhead.next;
    }
    
}
